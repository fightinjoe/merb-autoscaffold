<%
  table        = database.schema[ self.class.Model ]
  columns      = table.columns
  associations = table.associations
  #has_manys    = associations.select { |a|
  #                 a.is_a?(DataMapper::Associations::HasManyAssociation)
  #               }.collect(&:association_name)
  belongs_tos  = associations.select { |a|
                   a.is_a?(DataMapper::Associations::BelongsToAssociation)
                 }
  #foreign_keys = belongs_tos.collect(&:foreign_key_name)
  assoc_hash   = Hash[*belongs_tos.collect {|a| [a.foreign_key_name, a]}.flatten]
%>

<ul class="unlist horizontal">
  <li><a href="<%= url( self.class.Model.plural_name ) %>">View all</a></li>
  <li><a href="<%= url("edit_#{ self.class.Model.singular_name }", @model) %>">Edit</a></li>
  <li>
    <form action="<%= url( self.class.Model.singular_name, @model ) %>" method="POST">
      <input type="hidden" name="_method" value="DELETE" />
      <input type="submit" value="Delete" />
    </form>
  </li>
</ul>

<dl>
  <% table.columns.each do |column| %>
    <dt><%= column.name %></dt>
    <dd>
      <% if association = assoc_hash[column.name] %>
        <% obj = association.constant.get( @model.send( column.name ) ) %>
        <a href="<%= url( association.constant.singular_name, obj ) %>">
          <%= obj.try(:title) || obj.try(:name) || "#{ obj.class.to_s } ##{ obj.id }" %>
        </a>
      <% else %>
        <%= @model.send( column.name ) %>
      <% end %>
    </dd>
  <% end %>
</dl>